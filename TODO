- in backends bind and create, make claim methods lock the database, to prevent
  race conditions

- improve all_group implementation by factorizing same backend operations
  (in progress)

- finish the implementation of _SqliteBackend

- implement force and readonly in _SqliteBackend

- implement file-based backends, and builtin backend

- make dirty/clean more aggressive: creation of elements should be added to
  their cleaning operations, but beware: that involves cleaning elements on
  which they depend -- e.g. before creating an annotation, its media must
  be clean -- because it may require creation too

- implement "external" contents (url attribute)

- make subcollections (annotations, medias...) of all and own groups dict-like

- make content data independant from other attributes (mimetype, schema) in
  the backend and update the API accordingly

- make content metadata of elements with content, and length of list-like
  elements available directly (i.e. from get_element)

- remove unused code in advene/utils once we are sure we won't use it

- add support for file-access (rather than getter/setter) to content data

- add indexes in the SQL schema (Annotations.f_begin at least)
  and test its efficiency
