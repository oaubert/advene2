cf. test2.py : _own and _all create a cyclic reference ;
-- redo utests with and without the cycle
-- add to unit test the checking of cyclic references for all objects
-- fix the relation between _own/_all and packages (similar to element/content)


- implement "external" contents (url attribute)

- make subcollections (annotations, medias...) of all and own groups dict-like

- make content data independant from other attributes (mimetype, schema) in
  the backend and update the API accordingly

- make elements dirtiable

- remove unused code in advene/utils once we are sure we won't use it

- add indexes in the SQL schema (Annotations.f_begin at least)
  and test its efficiency
